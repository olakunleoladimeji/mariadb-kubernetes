# Copyright (C) 2018, MariaDB Corporation
#
# Stores cluste-wide initialization scripts in a config map

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-mariadb-config
  labels:
{{ tpl (.Files.Get "snippets/labels") . | indent 4 }}
data:
  init-configurations.sh: |
{{- if (eq .Values.mariadb.cluster.topology "columnstore") }}
{{ tpl (.Files.Get "config/init-configuration-columnstore-mn.sh") . | indent 4 }}
{{- else if (eq .Values.mariadb.cluster.topology "columnstore-standalone") }}
{{ tpl (.Files.Get "config/init-configuration-columnstore-sn.sh") . | indent 4 }}
{{- else }}
{{ tpl (.Files.Get "config/init-configurations.sh") . | indent 4 }}
{{- end }}
{{- if (eq .Values.mariadb.cluster.topology "columnstore-standalone") }}
  init_singlenode.sh: |
{{ tpl (.Files.Get "config/columnstore/init_singlenode.sh") . | indent 4 }}
{{- else if (eq .Values.mariadb.cluster.topology "columnstore") }}
  init_um_master.sh: |
{{ tpl (.Files.Get "config/columnstore/init_um_master.sh") . | indent 4 }}
  init_um_slave.sh: |
{{ tpl (.Files.Get "config/columnstore/init_um_slave.sh") . | indent 4 }}
  init_um_master_pi.sh: |
{{ tpl (.Files.Get "config/columnstore/init_um_master.sh") . | indent 4 }}
  init_um_slave_pi.sh: |
{{ tpl (.Files.Get "config/columnstore/init_um_slave.sh") . | indent 4 }}
  init_pm.sh: |
{{ tpl (.Files.Get "config/columnstore/init_pm.sh") . | indent 4 }}
  init_pm_postconf.sh: |
{{ tpl (.Files.Get "config/columnstore/init_pm_postconf.sh") . | indent 4 }}
{{- end }}
{{- if .Values.mariadb.columnstore.test}}
  test_cs.sh: |
{{ tpl (.Files.Get "tests/cs/test_cs.sh") . | indent 4 }}
  initdb.sql: |
{{ tpl (.Files.Get "tests/cs/initdb.sql") . | indent 4 }}
{{- end }}
{{- if .Values.mariadb.columnstore.sandbox}}
  02_load_bookstore_data.sh: |
{{ tpl (.Files.Get "config/columnstore/multi_node_um1/02_load_bookstore_data.sh") . | indent 4 }}
{{- end }}
  start-mariadb-instance.sh: |
{{- if (eq .Values.mariadb.cluster.topology "columnstore-standalone") }}
{{ tpl (.Files.Get "config/start-mariadb-instance-columnstore-sn.sh") . | indent 4 }}
{{- else if (eq .Values.mariadb.cluster.topology "columnstore") }}
{{- if .Values.mariadb.columnstore.stableIpServices -}}
{{ tpl (.Files.Get "config/start-mariadb-instance-columnstore-mn-stable-ip.sh") . | indent 4 }}
{{- else -}}
{{ tpl (.Files.Get "config/start-mariadb-instance-columnstore-mn.sh") . | indent 4 }}
{{- end -}}
{{- else }}
{{ tpl (.Files.Get "config/start-mariadb-instance.sh") . | indent 4 }}
{{- end }}
  users.sql: |
{{ tpl (.Files.Get "config/users.sql") . | indent 4 }}

  maxscale.cnf: |
{{ tpl (.Files.Get "config/maxscale.cnf") . | indent 4 }}

  backup-save.sh: |
{{ tpl (.Files.Get "config/backup-save.sh") . | indent 4 }}

{{- if or (eq .Values.mariadb.cluster.topology "standalone") (eq .Values.mariadb.cluster.topology "masterslave") }}
  replication.sql: |
{{ tpl (.Files.Get "config/replication.sql") . | indent 4 }}
{{- else if eq .Values.mariadb.cluster.topology "galera" }}
  galera.cnf: |
{{ tpl (.Files.Get "config/galera.cnf") . | indent 4 }}
{{- end }}

{{- if .Values.mariadb.server.restore.restoreFrom }}
  backup-restore.sh: |
{{ tpl (.Files.Get "config/backup-restore.sh") . | indent 4 }}
{{- end }}
